// source: exonum/runtime/errors.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.exonum.runtime.CallSite', null, global);
goog.exportSymbol('proto.exonum.runtime.CallSite.Type', null, global);
goog.exportSymbol('proto.exonum.runtime.ErrorKind', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionError', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionError.CallInfoCase', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionError.RuntimeCase', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionErrorAux', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionStatus', null, global);
goog.exportSymbol('proto.exonum.runtime.ExecutionStatus.ResultCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.exonum.runtime.ExecutionError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.exonum.runtime.ExecutionError.repeatedFields_, proto.exonum.runtime.ExecutionError.oneofGroups_);
};
goog.inherits(proto.exonum.runtime.ExecutionError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.exonum.runtime.ExecutionError.displayName = 'proto.exonum.runtime.ExecutionError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.exonum.runtime.ExecutionErrorAux = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.exonum.runtime.ExecutionErrorAux.repeatedFields_, null);
};
goog.inherits(proto.exonum.runtime.ExecutionErrorAux, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.exonum.runtime.ExecutionErrorAux.displayName = 'proto.exonum.runtime.ExecutionErrorAux';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.exonum.runtime.CallSite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.exonum.runtime.CallSite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.exonum.runtime.CallSite.displayName = 'proto.exonum.runtime.CallSite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.exonum.runtime.ExecutionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.exonum.runtime.ExecutionStatus.oneofGroups_);
};
goog.inherits(proto.exonum.runtime.ExecutionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.exonum.runtime.ExecutionStatus.displayName = 'proto.exonum.runtime.ExecutionStatus';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.exonum.runtime.ExecutionError.repeatedFields_ = [8];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.exonum.runtime.ExecutionError.oneofGroups_ = [[4,5],[6,7]];

/**
 * @enum {number}
 */
proto.exonum.runtime.ExecutionError.RuntimeCase = {
  RUNTIME_NOT_SET: 0,
  RUNTIME_ID: 4,
  NO_RUNTIME_ID: 5
};

/**
 * @return {proto.exonum.runtime.ExecutionError.RuntimeCase}
 */
proto.exonum.runtime.ExecutionError.prototype.getRuntimeCase = function() {
  return /** @type {proto.exonum.runtime.ExecutionError.RuntimeCase} */(jspb.Message.computeOneofCase(this, proto.exonum.runtime.ExecutionError.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.exonum.runtime.ExecutionError.CallInfoCase = {
  CALL_INFO_NOT_SET: 0,
  CALL_SITE: 6,
  NO_CALL_SITE: 7
};

/**
 * @return {proto.exonum.runtime.ExecutionError.CallInfoCase}
 */
proto.exonum.runtime.ExecutionError.prototype.getCallInfoCase = function() {
  return /** @type {proto.exonum.runtime.ExecutionError.CallInfoCase} */(jspb.Message.computeOneofCase(this, proto.exonum.runtime.ExecutionError.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.exonum.runtime.ExecutionError.prototype.toObject = function(opt_includeInstance) {
  return proto.exonum.runtime.ExecutionError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.exonum.runtime.ExecutionError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionError.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    runtimeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    noRuntimeId: (f = msg.getNoRuntimeId()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    callSite: (f = msg.getCallSite()) && proto.exonum.runtime.CallSite.toObject(includeInstance, f),
    noCallSite: (f = msg.getNoCallSite()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    backtraceList: jspb.Message.toObjectList(msg.getBacktraceList(),
    proto.exonum.runtime.CallSite.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.exonum.runtime.ExecutionError}
 */
proto.exonum.runtime.ExecutionError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.exonum.runtime.ExecutionError;
  return proto.exonum.runtime.ExecutionError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.exonum.runtime.ExecutionError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.exonum.runtime.ExecutionError}
 */
proto.exonum.runtime.ExecutionError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.exonum.runtime.ErrorKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuntimeId(value);
      break;
    case 5:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setNoRuntimeId(value);
      break;
    case 6:
      var value = new proto.exonum.runtime.CallSite;
      reader.readMessage(value,proto.exonum.runtime.CallSite.deserializeBinaryFromReader);
      msg.setCallSite(value);
      break;
    case 7:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setNoCallSite(value);
      break;
    case 8:
      var value = new proto.exonum.runtime.CallSite;
      reader.readMessage(value,proto.exonum.runtime.CallSite.deserializeBinaryFromReader);
      msg.addBacktrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.exonum.runtime.ExecutionError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.exonum.runtime.ExecutionError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.exonum.runtime.ExecutionError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNoRuntimeId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getCallSite();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.exonum.runtime.CallSite.serializeBinaryToWriter
    );
  }
  f = message.getNoCallSite();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getBacktraceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.exonum.runtime.CallSite.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorKind kind = 1;
 * @return {!proto.exonum.runtime.ErrorKind}
 */
proto.exonum.runtime.ExecutionError.prototype.getKind = function() {
  return /** @type {!proto.exonum.runtime.ErrorKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.exonum.runtime.ErrorKind} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 code = 2;
 * @return {number}
 */
proto.exonum.runtime.ExecutionError.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.exonum.runtime.ExecutionError.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 runtime_id = 4;
 * @return {number}
 */
proto.exonum.runtime.ExecutionError.prototype.getRuntimeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.setRuntimeId = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.exonum.runtime.ExecutionError.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.clearRuntimeId = function() {
  return jspb.Message.setOneofField(this, 4, proto.exonum.runtime.ExecutionError.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionError.prototype.hasRuntimeId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Empty no_runtime_id = 5;
 * @return {?proto.google.protobuf.Empty}
 */
proto.exonum.runtime.ExecutionError.prototype.getNoRuntimeId = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 5));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
*/
proto.exonum.runtime.ExecutionError.prototype.setNoRuntimeId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.exonum.runtime.ExecutionError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.clearNoRuntimeId = function() {
  return this.setNoRuntimeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionError.prototype.hasNoRuntimeId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CallSite call_site = 6;
 * @return {?proto.exonum.runtime.CallSite}
 */
proto.exonum.runtime.ExecutionError.prototype.getCallSite = function() {
  return /** @type{?proto.exonum.runtime.CallSite} */ (
    jspb.Message.getWrapperField(this, proto.exonum.runtime.CallSite, 6));
};


/**
 * @param {?proto.exonum.runtime.CallSite|undefined} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
*/
proto.exonum.runtime.ExecutionError.prototype.setCallSite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.exonum.runtime.ExecutionError.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.clearCallSite = function() {
  return this.setCallSite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionError.prototype.hasCallSite = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Empty no_call_site = 7;
 * @return {?proto.google.protobuf.Empty}
 */
proto.exonum.runtime.ExecutionError.prototype.getNoCallSite = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 7));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
*/
proto.exonum.runtime.ExecutionError.prototype.setNoCallSite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.exonum.runtime.ExecutionError.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.clearNoCallSite = function() {
  return this.setNoCallSite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionError.prototype.hasNoCallSite = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated CallSite backtrace = 8;
 * @return {!Array<!proto.exonum.runtime.CallSite>}
 */
proto.exonum.runtime.ExecutionError.prototype.getBacktraceList = function() {
  return /** @type{!Array<!proto.exonum.runtime.CallSite>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.exonum.runtime.CallSite, 8));
};


/**
 * @param {!Array<!proto.exonum.runtime.CallSite>} value
 * @return {!proto.exonum.runtime.ExecutionError} returns this
*/
proto.exonum.runtime.ExecutionError.prototype.setBacktraceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.exonum.runtime.CallSite=} opt_value
 * @param {number=} opt_index
 * @return {!proto.exonum.runtime.CallSite}
 */
proto.exonum.runtime.ExecutionError.prototype.addBacktrace = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.exonum.runtime.CallSite, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.exonum.runtime.ExecutionError} returns this
 */
proto.exonum.runtime.ExecutionError.prototype.clearBacktraceList = function() {
  return this.setBacktraceList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.exonum.runtime.ExecutionErrorAux.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.toObject = function(opt_includeInstance) {
  return proto.exonum.runtime.ExecutionErrorAux.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.exonum.runtime.ExecutionErrorAux} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionErrorAux.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    backtraceList: jspb.Message.toObjectList(msg.getBacktraceList(),
    proto.exonum.runtime.CallSite.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.exonum.runtime.ExecutionErrorAux}
 */
proto.exonum.runtime.ExecutionErrorAux.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.exonum.runtime.ExecutionErrorAux;
  return proto.exonum.runtime.ExecutionErrorAux.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.exonum.runtime.ExecutionErrorAux} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.exonum.runtime.ExecutionErrorAux}
 */
proto.exonum.runtime.ExecutionErrorAux.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new proto.exonum.runtime.CallSite;
      reader.readMessage(value,proto.exonum.runtime.CallSite.deserializeBinaryFromReader);
      msg.addBacktrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.exonum.runtime.ExecutionErrorAux.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.exonum.runtime.ExecutionErrorAux} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionErrorAux.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBacktraceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.exonum.runtime.CallSite.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.exonum.runtime.ExecutionErrorAux} returns this
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CallSite backtrace = 2;
 * @return {!Array<!proto.exonum.runtime.CallSite>}
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.getBacktraceList = function() {
  return /** @type{!Array<!proto.exonum.runtime.CallSite>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.exonum.runtime.CallSite, 2));
};


/**
 * @param {!Array<!proto.exonum.runtime.CallSite>} value
 * @return {!proto.exonum.runtime.ExecutionErrorAux} returns this
*/
proto.exonum.runtime.ExecutionErrorAux.prototype.setBacktraceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.exonum.runtime.CallSite=} opt_value
 * @param {number=} opt_index
 * @return {!proto.exonum.runtime.CallSite}
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.addBacktrace = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.exonum.runtime.CallSite, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.exonum.runtime.ExecutionErrorAux} returns this
 */
proto.exonum.runtime.ExecutionErrorAux.prototype.clearBacktraceList = function() {
  return this.setBacktraceList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.exonum.runtime.CallSite.prototype.toObject = function(opt_includeInstance) {
  return proto.exonum.runtime.CallSite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.exonum.runtime.CallSite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.CallSite.toObject = function(includeInstance, msg) {
  var f, obj = {
    callType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    instanceId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    methodId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.exonum.runtime.CallSite}
 */
proto.exonum.runtime.CallSite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.exonum.runtime.CallSite;
  return proto.exonum.runtime.CallSite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.exonum.runtime.CallSite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.exonum.runtime.CallSite}
 */
proto.exonum.runtime.CallSite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.exonum.runtime.CallSite.Type} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInstanceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMethodId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.exonum.runtime.CallSite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.exonum.runtime.CallSite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.exonum.runtime.CallSite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.CallSite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getInstanceId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMethodId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.exonum.runtime.CallSite.Type = {
  METHOD: 0,
  CONSTRUCTOR: 1,
  BEFORE_TRANSACTIONS: 2,
  AFTER_TRANSACTIONS: 3,
  RESUME: 4
};

/**
 * optional Type call_type = 1;
 * @return {!proto.exonum.runtime.CallSite.Type}
 */
proto.exonum.runtime.CallSite.prototype.getCallType = function() {
  return /** @type {!proto.exonum.runtime.CallSite.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.exonum.runtime.CallSite.Type} value
 * @return {!proto.exonum.runtime.CallSite} returns this
 */
proto.exonum.runtime.CallSite.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 instance_id = 2;
 * @return {number}
 */
proto.exonum.runtime.CallSite.prototype.getInstanceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.exonum.runtime.CallSite} returns this
 */
proto.exonum.runtime.CallSite.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 method_id = 3;
 * @return {number}
 */
proto.exonum.runtime.CallSite.prototype.getMethodId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.exonum.runtime.CallSite} returns this
 */
proto.exonum.runtime.CallSite.prototype.setMethodId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string interface = 4;
 * @return {string}
 */
proto.exonum.runtime.CallSite.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.exonum.runtime.CallSite} returns this
 */
proto.exonum.runtime.CallSite.prototype.setInterface = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.exonum.runtime.ExecutionStatus.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.exonum.runtime.ExecutionStatus.ResultCase = {
  RESULT_NOT_SET: 0,
  OK: 1,
  ERROR: 2
};

/**
 * @return {proto.exonum.runtime.ExecutionStatus.ResultCase}
 */
proto.exonum.runtime.ExecutionStatus.prototype.getResultCase = function() {
  return /** @type {proto.exonum.runtime.ExecutionStatus.ResultCase} */(jspb.Message.computeOneofCase(this, proto.exonum.runtime.ExecutionStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.exonum.runtime.ExecutionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.exonum.runtime.ExecutionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.exonum.runtime.ExecutionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: (f = msg.getOk()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.exonum.runtime.ExecutionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.exonum.runtime.ExecutionStatus}
 */
proto.exonum.runtime.ExecutionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.exonum.runtime.ExecutionStatus;
  return proto.exonum.runtime.ExecutionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.exonum.runtime.ExecutionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.exonum.runtime.ExecutionStatus}
 */
proto.exonum.runtime.ExecutionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 2:
      var value = new proto.exonum.runtime.ExecutionError;
      reader.readMessage(value,proto.exonum.runtime.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.exonum.runtime.ExecutionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.exonum.runtime.ExecutionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.exonum.runtime.ExecutionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.exonum.runtime.ExecutionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.exonum.runtime.ExecutionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty ok = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.exonum.runtime.ExecutionStatus.prototype.getOk = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.exonum.runtime.ExecutionStatus} returns this
*/
proto.exonum.runtime.ExecutionStatus.prototype.setOk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.exonum.runtime.ExecutionStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionStatus} returns this
 */
proto.exonum.runtime.ExecutionStatus.prototype.clearOk = function() {
  return this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionStatus.prototype.hasOk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ExecutionError error = 2;
 * @return {?proto.exonum.runtime.ExecutionError}
 */
proto.exonum.runtime.ExecutionStatus.prototype.getError = function() {
  return /** @type{?proto.exonum.runtime.ExecutionError} */ (
    jspb.Message.getWrapperField(this, proto.exonum.runtime.ExecutionError, 2));
};


/**
 * @param {?proto.exonum.runtime.ExecutionError|undefined} value
 * @return {!proto.exonum.runtime.ExecutionStatus} returns this
*/
proto.exonum.runtime.ExecutionStatus.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.exonum.runtime.ExecutionStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.exonum.runtime.ExecutionStatus} returns this
 */
proto.exonum.runtime.ExecutionStatus.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.exonum.runtime.ExecutionStatus.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.exonum.runtime.ErrorKind = {
  UNEXPECTED: 0,
  CORE: 1,
  RUNTIME: 2,
  SERVICE: 3,
  COMMON: 4
};

goog.object.extend(exports, proto.exonum.runtime);
